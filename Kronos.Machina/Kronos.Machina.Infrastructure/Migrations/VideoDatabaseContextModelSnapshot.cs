// <auto-generated />
using System;
using Kronos.Machina.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kronos.Machina.Infrastructure.Migrations
{
    [DbContext(typeof(VideoDatabaseContext))]
    partial class VideoDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Kronos.Machina.Domain.Entities.VideoData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AvailableImageQuality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Orientation")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("VideoFormatId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VideoFormatId");

                    b.ToTable("VideoData");
                });

            modelBuilder.Entity("Kronos.Machina.Domain.Entities.VideoFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Signature")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("VideoFormats");
                });

            modelBuilder.Entity("Kronos.Machina.Domain.Entities.VideoUploadStrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UploadStrategies");
                });

            modelBuilder.Entity("Kronos.Machina.Domain.Entities.VideoData", b =>
                {
                    b.HasOne("Kronos.Machina.Domain.Entities.VideoFormat", "VideoFormat")
                        .WithMany()
                        .HasForeignKey("VideoFormatId");

                    b.OwnsOne("Kronos.Machina.Domain.Entities.VideoUploadData", "UploadData", b1 =>
                        {
                            b1.Property<Guid>("VideoDataId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("State")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid?>("UploadStrategyId")
                                .HasColumnType("TEXT");

                            b1.HasKey("VideoDataId");

                            b1.HasIndex("UploadStrategyId");

                            b1.ToTable("VideoData");

                            b1.HasOne("Kronos.Machina.Domain.Entities.VideoUploadStrategy", "UploadStrategy")
                                .WithMany()
                                .HasForeignKey("UploadStrategyId");

                            b1.WithOwner()
                                .HasForeignKey("VideoDataId");

                            b1.OwnsOne("Kronos.Machina.Domain.Entities.BlobData", "BlobData", b2 =>
                                {
                                    b2.Property<Guid>("VideoUploadDataVideoDataId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("BlobId")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("VideoUploadDataVideoDataId");

                                    b2.ToTable("VideoData");

                                    b2.WithOwner()
                                        .HasForeignKey("VideoUploadDataVideoDataId");

                                    b2.OwnsOne("Kronos.Machina.Domain.Entities.SanitizationData", "SanitizationData", b3 =>
                                        {
                                            b3.Property<Guid>("BlobDataVideoUploadDataVideoDataId")
                                                .HasColumnType("TEXT");

                                            b3.Property<int>("State")
                                                .HasColumnType("INTEGER");

                                            b3.HasKey("BlobDataVideoUploadDataVideoDataId");

                                            b3.ToTable("VideoData");

                                            b3.WithOwner()
                                                .HasForeignKey("BlobDataVideoUploadDataVideoDataId");

                                            b3.OwnsOne("Kronos.Machina.Domain.Entities.BlobSanitizationHistory", "History", b4 =>
                                                {
                                                    b4.Property<Guid>("SanitizationDataBlobDataVideoUploadDataVideoDataId")
                                                        .HasColumnType("TEXT");

                                                    b4.HasKey("SanitizationDataBlobDataVideoUploadDataVideoDataId");

                                                    b4.ToTable("VideoData");

                                                    b4.WithOwner()
                                                        .HasForeignKey("SanitizationDataBlobDataVideoUploadDataVideoDataId");

                                                    b4.OwnsMany("Kronos.Machina.Domain.Entities.BlobSanitizationHistoryEntry", "Entries", b5 =>
                                                        {
                                                            b5.Property<Guid>("BlobSanitizationHistorySanitizationDataBlobDataVideoUploadDataVideoDataId")
                                                                .HasColumnType("TEXT");

                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("INTEGER");

                                                            b5.Property<DateTimeOffset>("CreatedAt")
                                                                .HasColumnType("TEXT");

                                                            b5.Property<string>("Description")
                                                                .IsRequired()
                                                                .HasColumnType("TEXT");

                                                            b5.Property<bool>("IsSuccessful")
                                                                .HasColumnType("INTEGER");

                                                            b5.Property<int>("OrderNumber")
                                                                .HasColumnType("INTEGER");

                                                            b5.Property<string>("StageType")
                                                                .IsRequired()
                                                                .HasColumnType("TEXT");

                                                            b5.HasKey("BlobSanitizationHistorySanitizationDataBlobDataVideoUploadDataVideoDataId", "Id");

                                                            b5.ToTable("BlobSanitizationHistoryEntry");

                                                            b5.WithOwner()
                                                                .HasForeignKey("BlobSanitizationHistorySanitizationDataBlobDataVideoUploadDataVideoDataId");
                                                        });

                                                    b4.Navigation("Entries");
                                                });

                                            b3.Navigation("History")
                                                .IsRequired();
                                        });

                                    b2.Navigation("SanitizationData")
                                        .IsRequired();
                                });

                            b1.Navigation("BlobData")
                                .IsRequired();

                            b1.Navigation("UploadStrategy");
                        });

                    b.Navigation("UploadData")
                        .IsRequired();

                    b.Navigation("VideoFormat");
                });
#pragma warning restore 612, 618
        }
    }
}
